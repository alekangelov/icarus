{"version":3,"file":"Popover.459fd114.js","sources":["../../../../packages/react/src/lib/Feedback/Popover/Popover.tsx"],"sourcesContent":["import { clsx, popover, Colors } from '@icarus/core';\nimport {\n  MouseEventHandler,\n  PropsWithChildren,\n  useCallback,\n  useState,\n} from 'react';\nimport { Button } from '../../General/Button';\nimport { Heading } from '../../General/Text';\nimport { Grid } from '../../Layout/Grid';\nimport { Spacing } from '../../Layout/Spacing';\nimport { Dialog } from '../Dialog';\n\ntype PopoverProps = {\n  title?: string;\n  content?: JSX.Element;\n  visible?: boolean;\n  onVisibilityChange?: (visible: boolean) => void;\n};\n\ntype PopConfirmProps = {\n  title?: string;\n  content?: JSX.Element;\n  ok?: {\n    label?: string;\n    color?: Colors;\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n  };\n  cancel?: {\n    label?: string;\n    color?: Colors;\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n  };\n  cancelText?: string;\n  footer?: JSX.Element;\n  toggleOff?: () => void;\n};\n\nconst PopoverContent = ({ title, content }: PopoverProps) => {\n  return (\n    <div className={clsx(popover.base)}>\n      {title && <Heading level=\"4\">{title}</Heading>}\n      {content && <div className={clsx(popover.content)}>{content}</div>}\n    </div>\n  );\n};\n\nexport const Popover = ({\n  children,\n  title,\n  content,\n  visible,\n  onVisibilityChange,\n}: PropsWithChildren<PopoverProps>) => (\n  <Dialog\n    visible={visible}\n    onVisibleChange={onVisibilityChange}\n    content={<PopoverContent title={title} content={content} />}\n  >\n    {children}\n  </Dialog>\n);\n\nexport const PopConfirmContent = ({\n  title,\n  content,\n  ok,\n  cancel,\n  toggleOff,\n  footer,\n}: PopConfirmProps) => {\n  return (\n    <Spacing gap=\"md\" direction=\"column\">\n      {content && <div className={clsx(popover.content)}>{content}</div>}\n      {footer ? (\n        footer\n      ) : (\n        <Grid gap=\"md\">\n          <Grid.Item size=\"6\">\n            <Button\n              fullWidth\n              color={cancel?.color || 'surfaceMd'}\n              onClick={(event) => {\n                cancel?.onClick?.(event);\n                toggleOff?.();\n              }}\n            >\n              {cancel?.label || 'Cancel'}\n            </Button>\n          </Grid.Item>\n          <Grid.Item size=\"6\">\n            <Button\n              fullWidth\n              color={ok?.color || 'primary'}\n              onClick={(event) => {\n                ok?.onClick?.(event);\n                toggleOff?.();\n              }}\n            >\n              {ok?.label || 'OK'}\n            </Button>\n          </Grid.Item>\n        </Grid>\n      )}\n    </Spacing>\n  );\n};\n\nexport const PopConfirm = ({\n  children,\n  title,\n  content,\n  ok,\n  cancel,\n}: PropsWithChildren<PopConfirmProps>) => {\n  const [visible, setVisible] = useState(false);\n  const onVisibleChange = useCallback(\n    (e: boolean) => {\n      setVisible(e);\n    },\n    [setVisible]\n  );\n  return (\n    <Dialog\n      visible={visible}\n      onVisibleChange={onVisibleChange}\n      content={\n        <PopoverContent\n          title={title}\n          content={\n            <PopConfirmContent\n              {...{ content, ok, cancel, toggleOff: () => setVisible(false) }}\n            />\n          }\n        />\n      }\n    >\n      {children}\n    </Dialog>\n  );\n};\n"],"names":["title","_jsxs","_jsx","content","children","visible","onVisibilityChange","ok","cancel","toggleOff","useState","useCallback","setVisible"],"mappings":"yYAsCA,KAAA,GAAA,CAAA,CAAwB,QAAEA,aACxBC,EAAA,MAAA,CACE,UAAA,EAAA,EAAA,IAAA,EAAoB,SAAA,CAAA,GAAAC,EAAA,EAAA,CACR,MAAA,IAAe,SAAA,CAAKF,CAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAClB,UAAA,EAAA,EAAA,OAAA,EAAoB,SAAA,CAAoBG,CAAAA,CAAAA,CAFtD,CAAA,EAOG,EAAA,CAAA,CAAiB,WACtBC,QACAJ,UACAG,UACAE,wBACAC,EAAAA,EAAAA,CAEA,UACE,gBAAA,EACiBA,QAAAA,EAAAA,EAAAA,CACR,QAAgB,SAAc,CAAA,EAHzC,UAAA,CAAA,EASK,EAAA,CAAA,CAA2B,QAChCN,UACAG,KACAI,SACAC,YACAC,YAGAR,EAAA,EAAA,CACE,IAAA,KAAa,UAAA,SAAe,SAAA,CAAA,GAAAC,EAAA,MAAA,CACd,UAAA,EAAA,EAAA,OAAA,EAAoB,SAAA,CAAoBC,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAIlD,IAAA,KAAU,SAAA,CAAAD,EAAA,EAAA,KAAA,CACR,KAAA,IAAgB,SAAAA,EAAA,EAAA,CACd,UAAA,GAAA,MAAA,kBAAA,QAAA,YAE0B,QAAA,AAAA,GAAA,OAEtBM,oBAAAA,UAAAA,eAAAA,GACAC,YAAS,EACV,SAAA,kBAAA,QAAA,QAEiB,CAAA,CARpB,CAAA,EAAAP,EAAA,EAAA,KAAA,CAWF,KAAA,IAAgB,SAAAA,EAAA,EAAA,CACd,UAAA,GAAA,MAAA,kBAAA,QAAA,UAEsB,QAAA,AAAA,GAAA,OAElBK,oBAAAA,UAAAA,eAAAA,GACAE,YAAS,EACV,SAAA,kBAAA,QAAA,IAEa,CAAA,CARhB,CAAA,CAAA,CAdJ,CAAA,CAAA,CALJ,CAAA,EAoCG,EAAA,CAAA,CAAoB,WACzBL,QACAJ,UACAG,KACAI,YACAC,CAEA,KAAA,CAAA,EAAA,GAAAE,EAAA,QAAA,SAAA,EAAA,EACA,EAAAC,sBAAA,AAAA,GAAA,CAEIC,EAAAA,CAAAA,CAAU,EAAA,CAAA,CAAA,CAAA,EAId,MAAAV,GAAA,EAAA,CACE,UACE,kBACA,QAAAA,EAAA,EAAA,CAEE,QACE,QAAAA,EAAA,EAAA,CAEE,UACQC,KAASI,SAAIC,UAAAA,IAAAA,EAAAA,EAAAA,CAAmC,CAAA,CADxD,CAAA,EAPR,UAAA,CAAA,CAiBH"}