{"version":3,"file":"Portal.b7efe8fb.js","sources":["../../../../packages/react/src/lib/internal/hooks/useDelayedUnmount.ts","../../../../packages/react/src/lib/internal/Portal.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport function useDelayedUnmount(isMounted: boolean, delayTime: number) {\n  const [shouldRender, setShouldRender] = useState(false);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (isMounted && !shouldRender) {\n      setShouldRender(true);\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime);\n    }\n    return () => clearTimeout(timeoutId);\n  }, [isMounted, delayTime, shouldRender]);\n  return shouldRender;\n}\n","import { PropsWithChildren } from 'react';\nimport { createPortal } from 'react-dom';\nimport { getGlobalPortal } from './containerIds';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const Portal = (props: PropsWithChildren<any>) => {\n  const parent = typeof window !== 'undefined' ? getGlobalPortal() : null;\n  if (!parent) return null;\n  return createPortal(props.children, parent);\n};\n"],"names":["useState","useEffect","createPortal"],"mappings":"+HAEO,WAA2B,EAAoB,EAAmB,CACvE,KAAM,CAAC,EAAc,GAAmBA,EAAA,QAAA,SAAS,EAAK,EAEtDC,SAAAA,QAAAA,UAAU,IAAM,CACV,GAAA,GACA,MAAA,IAAa,CAAC,EAChB,EAAgB,EAAI,EACX,CAAC,GAAa,GACvB,GAAY,WAAW,IAAM,EAAgB,EAAK,EAAG,CAAS,GAEzD,IAAM,aAAa,CAAS,CAClC,EAAA,CAAC,EAAW,EAAW,CAAY,CAAC,EAChC,CACT,CCVO,KAAA,GAAA,AAAA,GAAA,CACL,KAAA,GAAA,MAAA,SAAA,YAAA,EAAA,EAAA,KACA,MAAA,GACAC,uBAAA,EAAA,SAAA,CAAA,EADa,IAEd"}