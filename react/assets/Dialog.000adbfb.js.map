{"version":3,"file":"Dialog.000adbfb.js","sources":["../../../../packages/core/src/styles/system/feedback/dialog/helpers.ts","../../../../node_modules/usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js","../../../../node_modules/usehooks-ts/dist/esm/useEventListener/useEventListener.js","../../../../packages/react/src/lib/internal/hooks/useToggle.ts","../../../../packages/react/src/lib/Feedback/constants/index.ts","../../../../packages/react/src/lib/Feedback/Dialog/Dialog.tsx"],"sourcesContent":["import { vars } from '../../../variables/index.css';\nimport { dialogInAnimation, dialogOutAnimation } from './dialog.css';\nimport { DialogPositions } from './types';\n\ntype Position = {\n  top: string;\n  left: string;\n};\n\nexport const DIALOG_ANIMATION_LENGTH = 260;\n\nconst makeAnimation = (keyframes: string) =>\n  `${keyframes} ${DIALOG_ANIMATION_LENGTH}ms ${vars.transition.easing}`;\n\nexport const getDialogAnimation = (isMounting: boolean) => {\n  return makeAnimation(isMounting ? dialogInAnimation : dialogOutAnimation);\n};\n\n// const oposites = {\n//   left: 'right',\n//   right: 'left',\n//   top: 'bottom',\n//   bottom: 'top',\n// } as const;\n\nconst getPositionForSide = (\n  position: DialogPositions,\n  dialog: DOMRect,\n  element: DOMRect\n): {\n  left: number;\n  top: number;\n} => {\n  const xCenter = element.left + (element.width / 2 - dialog.width / 2);\n  const yCenter = element.top + (element.height / 2 - dialog.height / 2);\n  let positionReturn = {\n    left: 0,\n    top: 0,\n  };\n  if (position === 'left') {\n    const left = element.left - dialog.width;\n    const top = yCenter;\n    positionReturn = { left, top };\n  }\n  if (position === 'right') {\n    const left = element.left + element.width;\n    const top = yCenter;\n    positionReturn = { left, top };\n  }\n  if (position === 'top') {\n    const left = xCenter;\n    const top = element.top - dialog.height;\n    positionReturn = { left, top };\n  }\n  if (position === 'bottom') {\n    const left = xCenter;\n    const top = element.top + element.height;\n    positionReturn = { left, top };\n  }\n  if (positionReturn.left <= 0) {\n    positionReturn.left = element.left;\n  }\n  if (positionReturn.top <= 0) {\n    positionReturn.top = element.top;\n  }\n  return positionReturn;\n};\n\nexport const getDialogPosition = (\n  position: DialogPositions,\n  dialogRef: HTMLDivElement | null,\n  elementRef: HTMLElement | null\n): Position => {\n  if (typeof window === 'undefined' || !dialogRef || !elementRef)\n    return { top: '0px', left: '0px' };\n  const defaultGutter = vars.spacing.md;\n  const dialogRect = dialogRef.getBoundingClientRect();\n  const { height: dialogHeight, width: dialogWidth } = dialogRect;\n  const elementRect = elementRef.getBoundingClientRect();\n  const {\n    height: triggerHeight,\n    width: triggerWidth,\n    left: triggerOffsetX,\n    top: triggeroffsetY,\n  } = elementRect;\n  if (position === 'left') {\n    if (triggerOffsetX <= dialogWidth) {\n      position = 'right';\n    }\n  }\n  if (position === 'right') {\n    if (triggerOffsetX + triggerWidth >= window.innerWidth - dialogWidth) {\n      position = 'left';\n    }\n  }\n  if (position === 'top') {\n    if (triggeroffsetY <= dialogHeight) {\n      position = 'bottom';\n    }\n  }\n  if (position === 'bottom') {\n    if (triggeroffsetY + triggerHeight >= window.innerHeight - dialogHeight) {\n      position = 'top';\n    }\n  }\n\n  const finalPosition = getPositionForSide(position, dialogRect, elementRect);\n  const newPositions: Partial<Position> = {};\n  if (position === 'left') {\n    newPositions.left = `calc(${finalPosition.left}px - ${defaultGutter})`;\n  }\n  if (position === 'right') {\n    newPositions.left = `calc(${finalPosition.left}px + ${defaultGutter})`;\n  }\n  if (position === 'top') {\n    newPositions.top = `calc(${finalPosition.top}px - ${defaultGutter})`;\n  }\n  if (position === 'bottom') {\n    newPositions.top = `calc(${finalPosition.top}px + ${defaultGutter})`;\n  }\n  return {\n    top: `${finalPosition.top}px`,\n    left: `${finalPosition.left}px`,\n    ...newPositions,\n  };\n};\n\nexport const isClickOutside = <T extends HTMLElement>(\n  event: MouseEvent,\n  dialogRef: T | null,\n  callback: () => void\n) => {\n  if (!dialogRef) return;\n\n  // Do nothing if clicking ref's element or descendent elements\n  if (!dialogRef || dialogRef.contains(event.target as Node)) {\n    return;\n  }\n  callback();\n};\n","import { useEffect, useLayoutEffect } from 'react';\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n//# sourceMappingURL=useIsomorphicLayoutEffect.js.map","import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nfunction useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        const targetElement = element?.current || window;\n        if (!(targetElement && targetElement.addEventListener)) {\n            return;\n        }\n        const eventListener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, eventListener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, eventListener);\n        };\n    }, [eventName, element, options]);\n}\nexport default useEventListener;\n//# sourceMappingURL=useEventListener.js.map","import { useCallback, useState } from 'react';\n\nconst opposite = (e: boolean) => !e;\n\nexport const useToggle = (initalValue = false) => {\n  const [value, setValue] = useState(initalValue);\n  const toggle = useCallback(() => setValue(opposite), [setValue]);\n  const setTrue = useCallback(() => setValue(true), [setValue]);\n  const setFalse = useCallback(() => setValue(false), [setValue]);\n  return {\n    value,\n    toggle,\n    setTrue,\n    setFalse,\n    setValue,\n  };\n};\n","export const getSingleChildMessage = (component: string) =>\n  `${component} can only have one child. Consider wrapping your children in a <div> or <span> element.`;\n","import {\n  clsx,\n  createId,\n  dialog,\n  DialogPositions,\n  DIALOG_ANIMATION_LENGTH,\n  getDialogAnimation,\n  getDialogPosition,\n} from '@icarus/core';\nimport {\n  Children,\n  cloneElement,\n  forwardRef,\n  PropsWithChildren,\n  Ref,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useDelayedUnmount } from '../../internal/hooks/useDelayedUnmount';\nimport { useEventListener } from 'usehooks-ts';\nimport { useToggle } from '../../internal/hooks/useToggle';\nimport { Portal } from '../../internal/Portal';\nimport { mergeRefs } from '../../internal/mergeRefs';\nimport { getSingleChildMessage } from '../constants';\ntype P2 = {\n  content?: JSX.Element;\n  visible?: boolean;\n  position?: DialogPositions;\n  parentElement: HTMLElement | null;\n  className?: string;\n  toggle: (event: MouseEvent) => void;\n  id: string;\n};\ntype P = Omit<P2, 'parentElement' | 'toggle' | 'id'> & {\n  triggerable?: boolean;\n  onVisibleChange?: (visible: boolean) => void;\n  listenersEscapeHatch?: boolean;\n  trigger?: 'click' | 'hover';\n};\n\nconst dialogId = createId('dialog');\n\nconst DialogBase = forwardRef(\n  (\n    {\n      id,\n      children,\n      visible = false,\n      position: positionProp = 'top',\n      parentElement,\n      className,\n    }: PropsWithChildren<P2>,\n    propRef: Ref<HTMLDivElement>\n  ) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [position, setPosition] = useState({ left: '0px', top: '0px' });\n    useEffect(() => {\n      const finalPosition = getDialogPosition(\n        positionProp,\n        ref.current,\n        parentElement\n      );\n\n      setPosition(finalPosition);\n    }, [parentElement, positionProp]);\n    return (\n      <Portal>\n        <div\n          id={id}\n          ref={mergeRefs([ref, propRef])}\n          className={clsx(dialog, className)}\n          style={{\n            animation: getDialogAnimation(visible),\n            ...position,\n          }}\n        >\n          {children}\n        </div>\n      </Portal>\n    );\n  }\n);\n\nexport const Dialog = forwardRef(\n  (\n    {\n      children,\n      triggerable = true,\n      content,\n      visible: visibleProp,\n      className,\n      position,\n      onVisibleChange,\n      trigger = 'click',\n    }: PropsWithChildren<P>,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    if (Children.count(children) > 1)\n      throw Error(getSingleChildMessage('Dialog'));\n    const id = useRef(dialogId());\n    const dialogRef = useRef<HTMLDivElement>(null);\n    const {\n      value: innerVisible,\n      toggle: toggleInnerVisible,\n      setValue: setInnerVisible,\n      setFalse,\n      setTrue,\n    } = useToggle(visibleProp || false);\n    const visibleFiltered = triggerable && innerVisible;\n    const newVisible =\n      typeof visibleProp === 'boolean'\n        ? visibleProp && visibleFiltered\n        : visibleFiltered;\n    const visible = useDelayedUnmount(newVisible, DIALOG_ANIMATION_LENGTH);\n    const childRef = useRef<HTMLElement>(null);\n    useEffect(() => {\n      if (typeof visibleProp !== 'boolean') return;\n      setInnerVisible(visibleProp);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [visibleProp]);\n\n    useEffect(() => {\n      onVisibleChange?.(newVisible);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [newVisible]);\n\n    const onListener = useCallback(\n      (event: MouseEvent) => {\n        if (visible) return;\n        event.preventDefault();\n        event.stopPropagation();\n        setTrue();\n      },\n      [setTrue, visible]\n    );\n\n    const offListener = useCallback(\n      (event: MouseEvent) => {\n        if (!visible) return;\n        event.preventDefault();\n        event.stopPropagation();\n        const target = event.target as HTMLElement;\n        if (target === childRef.current) return setFalse();\n        if (!target.closest(`#${id.current}`)) return setFalse();\n      },\n      [setFalse, visible]\n    );\n\n    useEventListener(\n      trigger === 'click' ? 'mousedown' : 'mouseover',\n      onListener,\n      childRef\n    );\n    useEventListener(\n      trigger === 'click' ? 'mousedown' : 'mouseout',\n      offListener,\n      trigger === 'click' ? { current: null } : childRef\n    );\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    if (!triggerable || !content) return <>{children}</>;\n    return (\n      <>\n        {visible && (\n          <DialogBase\n            {...{\n              id: id.current,\n              ref: mergeRefs([ref, dialogRef]),\n              visible: newVisible,\n              parentElement: childRef.current,\n              className,\n              toggle: toggleInnerVisible,\n              position,\n            }}\n          >\n            {content}\n          </DialogBase>\n        )}\n        {cloneElement(children as JSX.Element, {\n          ref: childRef,\n        })}\n      </>\n    );\n  }\n);\n"],"names":["useLayoutEffect","useEffect","useRef","useState","useCallback","forwardRef","id","children","parentElement","className","setPosition","_jsx","position","content","visibleProp","onVisibleChange","Children","innerVisible","toggleInnerVisible","setInnerVisible","setFalse","setTrue","event","useEventListener","_Fragment","_jsxs","current","newVisible","childRef"],"mappings":"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"}