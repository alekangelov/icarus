{"version":3,"file":"Grid.0d420d0f.js","sources":["../../../../node_modules/@vanilla-extract/private/dist/vanilla-extract-private.esm.js","../../../../node_modules/@vanilla-extract/dynamic/dist/vanilla-extract-dynamic.esm.js","../../../../packages/core/src/styles/system/layout/grid/helpers.ts","../../../../packages/react/src/lib/Layout/Grid/Grid.tsx"],"sourcesContent":["function getVarName(variable) {\n  var matches = variable.match(/^var\\((.*)\\)$/);\n\n  if (matches) {\n    return matches[1];\n  }\n\n  return variable;\n}\n\nfunction get(obj, path) {\n  var result = obj;\n\n  for (var key of path) {\n    if (!(key in result)) {\n      throw new Error(\"Path \".concat(path.join(' -> '), \" does not exist in object\"));\n    }\n\n    result = result[key];\n  }\n\n  return result;\n}\n\nfunction walkObject(obj, fn) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var clone = obj.constructor();\n\n  for (var key in obj) {\n    var _value = obj[key];\n    var currentPath = [...path, key];\n\n    if (typeof _value === 'string' || typeof _value === 'number' || _value == null) {\n      clone[key] = fn(_value, currentPath);\n    } else if (typeof _value === 'object' && !Array.isArray(_value)) {\n      clone[key] = walkObject(_value, fn, currentPath);\n    } else {\n      console.warn(\"Skipping invalid key \\\"\".concat(currentPath.join('.'), \"\\\". Should be a string, number, null or object. Received: \\\"\").concat(Array.isArray(_value) ? 'Array' : typeof _value, \"\\\"\"));\n    }\n  }\n\n  return clone;\n}\n\nexport { get, getVarName, walkObject };\n","import { walkObject, get, getVarName } from '@vanilla-extract/private';\n\nfunction assignInlineVars(varsOrContract, tokens) {\n  var styles = {};\n\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      var varName = get(_contract, path);\n      styles[getVarName(varName)] = String(value);\n    });\n  } else {\n    var _vars = varsOrContract;\n\n    for (var varName in _vars) {\n      styles[getVarName(varName)] = _vars[varName];\n    }\n  }\n\n  Object.defineProperty(styles, 'toString', {\n    value: function value() {\n      return Object.keys(this).map(key => \"\".concat(key, \":\").concat(this[key])).join(';');\n    },\n    writable: false\n  });\n  return styles;\n}\n\nfunction setVar(element, variable, value) {\n  element.style.setProperty(getVarName(variable), value);\n}\n\nfunction setElementVars(element, varsOrContract, tokens) {\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      setVar(element, get(_contract, path), String(value));\n    });\n  } else {\n    var _vars = varsOrContract;\n\n    for (var varName in _vars) {\n      setVar(element, varName, _vars[varName]);\n    }\n  }\n}\n\nexport { assignInlineVars, setElementVars };\n","import { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { vars } from '../../../variables/index.css';\nimport { gap } from './container.css';\n\nconst { spacing: gaps } = vars;\n\ntype SpacingKeys = keyof typeof gaps;\n\nexport const assignGap = (gapValue?: SpacingKeys) => {\n  if (!gapValue) {\n    return {};\n  }\n  return assignInlineVars(\n    {\n      gap,\n    },\n    {\n      gap: gaps[gapValue],\n    }\n  );\n};\n","import {\n  gridContainer,\n  gridColumn,\n  GridColumnProps,\n  GridContainerProps,\n  clsx,\n  mergeStyles,\n  assignGap,\n  alignmentStyles,\n  AlignmentOptions,\n  justifyStyles,\n} from '@icarus/core';\nimport { forwardRef, Ref } from 'react';\n\ntype GapArguments = Parameters<typeof assignGap>[0];\n\ntype GridContainerComponentProps = GridContainerProps &\n  JSX.IntrinsicElements['div'] & {\n    gap?: GapArguments;\n    align?: AlignmentOptions;\n    justify?: AlignmentOptions;\n  };\n\nconst GridContainer = forwardRef(\n  (\n    { wrap, gap, align, justify, ...props }: GridContainerComponentProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const styles = mergeStyles(assignGap(gap), props.style);\n    return (\n      <div\n        {...props}\n        ref={ref}\n        className={clsx(\n          gridContainer({ wrap }),\n          props.className,\n          align && alignmentStyles[align],\n          justify && justifyStyles[justify]\n        )}\n        style={styles}\n      />\n    );\n  }\n);\n\ntype GridItemProps = GridColumnProps & JSX.IntrinsicElements['div'];\n\nconst GridItem = forwardRef(\n  (\n    {\n      size,\n      tabletSize,\n      desktopSize,\n      laptopSize,\n      offset,\n      tabletOffset,\n      laptopOffset,\n      desktopOffset,\n      ...props\n    }: GridItemProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        className={clsx(\n          gridColumn({\n            size,\n            tabletSize,\n            desktopSize,\n            laptopSize,\n            offset,\n            tabletOffset,\n            laptopOffset,\n            desktopOffset,\n          }),\n          props.className\n        )}\n      />\n    );\n  }\n);\n\ntype GridContainerComponentType = typeof GridContainer;\n\ninterface Grid extends GridContainerComponentType {\n  Item: typeof GridItem;\n}\n\nconst GridPrecursor: Partial<Grid> = GridContainer;\nGridPrecursor.Item = GridItem;\n\nexport const Grid = GridPrecursor as Grid;\n"],"names":["forwardRef","wrap","gap","align","justify","props","_jsx","styles","size","tabletSize","desktopSize","laptopSize","offset","tabletOffset","laptopOffset","desktopOffset","GridPrecursor"],"mappings":"2TAAA,WAAoB,EAAU,CAC5B,GAAI,GAAU,EAAS,MAAM,eAAe,EAE5C,MAAI,GACK,EAAQ,GAGV,CACT,CAEA,WAAa,EAAK,EAAM,CACtB,GAAI,GAAS,EAEb,OAAS,KAAO,GAAM,CACpB,GAAI,CAAE,KAAO,IACX,KAAM,IAAI,OAAM,QAAQ,OAAO,EAAK,KAAK,MAAM,EAAG,2BAA2B,CAAC,EAGhF,EAAS,EAAO,EACjB,CAED,MAAO,EACT,CAEA,WAAoB,EAAK,EAAI,CAC3B,GAAI,GAAO,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAK,CAAA,EAC3E,EAAQ,EAAI,cAEhB,OAAS,KAAO,GAAK,CACnB,GAAI,GAAS,EAAI,GACb,EAAc,CAAC,GAAG,EAAM,CAAG,EAE/B,AAAI,MAAO,IAAW,UAAY,MAAO,IAAW,UAAY,GAAU,KACxE,EAAM,GAAO,EAAG,EAAQ,CAAW,EAC9B,AAAI,MAAO,IAAW,UAAY,CAAC,MAAM,QAAQ,CAAM,EAC5D,EAAM,GAAO,EAAW,EAAQ,EAAI,CAAW,EAE/C,QAAQ,KAAK,yBAA0B,OAAO,EAAY,KAAK,GAAG,EAAG,4DAA8D,EAAE,OAAO,MAAM,QAAQ,CAAM,EAAI,QAAU,MAAO,GAAQ,GAAI,CAAC,CAErM,CAED,MAAO,EACT,CCxCA,WAA0B,EAAgB,EAAQ,CAChD,GAAI,GAAS,CAAA,EAEb,GAAI,MAAO,IAAW,SAAU,CAC9B,GAAI,GAAY,EAChB,EAAW,EAAQ,CAAC,EAAO,IAAS,CAClC,GAAI,GAAU,EAAI,EAAW,CAAI,EACjC,EAAO,EAAW,CAAO,GAAK,OAAO,CAAK,CAChD,CAAK,CACL,KAAS,CACL,GAAI,GAAQ,EAEZ,OAAS,KAAW,GAClB,EAAO,EAAW,CAAO,GAAK,EAAM,EAEvC,CAED,cAAO,eAAe,EAAQ,WAAY,CACxC,MAAO,UAAiB,CACtB,MAAO,QAAO,KAAK,IAAI,EAAE,IAAI,GAAO,GAAG,OAAO,EAAK,GAAG,EAAE,OAAO,KAAK,EAAI,CAAC,EAAE,KAAK,GAAG,CACpF,EACD,SAAU,EACd,CAAG,EACM,CACT,mkDCtBA,KAAM,CAAE,QAAS,GAAS,EAIb,EAAY,AAAC,GACnB,EAGE,EACL,CACE,KAAA,EAEF,CACE,IAAK,EAAK,EAAA,CAEd,EATS,GCaX,EAAAA,EAAA,QAAA,WAAA,CAAA,CAEI,OAAEC,MAAMC,QAAKC,aAAOC,GAAYC,IAAAA,CAGhC,KAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EACA,MAAAC,GAAA,MAAA,MAEQD,MACJ,UAAA,EAAA,EAAA,CAEgB,MAAEJ,CAAAA,EAAAA,EAAAA,UAAAA,GAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EADH,MAAA,CAMRM,CAAAA,CAGZ,CAAA,EAKH,EAAAP,EAAA,QAAA,WAAA,CAAA,CAEI,OACEQ,aACAC,cACAC,aACAC,SACAC,eACAC,eACAC,mBACAC,GACGV,IAILC,EAAA,MAAA,MAEQD,MACJ,UAAA,EAAA,EAAA,CAEa,OACTG,aACAC,cACAC,aACAC,SACAC,eACAC,eACAC,eACAC,CAAAA,EAAAA,EAAAA,SAAAA,CATW,CAAA,CAepB,EASH,EAAA,EACAC,EAAAA,KAAAA,EAEO,KAAA,GAAA"}