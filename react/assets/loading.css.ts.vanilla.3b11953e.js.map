{"version":3,"file":"loading.css.ts.vanilla.3b11953e.js","sources":["../../../../packages/core/src/helpers/clsx.ts","../../../../packages/core/src/styles/system/box/helpers/proxies.ts"],"sourcesContent":["type ClassName = string | undefined | false;\ntype ObjectNotation = {\n  [key: string]: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyObject = Record<any, any>;\n\n/**\n * Use to combine multiple class names into a single \"React\" class name.\n *\n * ```ts\n *    clsx({[someClass]: true, [someOtherClass]: false})\n * ```\n *\n * ```ts\n *    clsx(someClass, someOtherClass, someCondition && conditionalClass)\n * ```\n *\n * @param args Can be a list of strings or an object with keys and values.\n * @returns A normalized list of classnames\n */\nexport const clsx = <T extends Array<ObjectNotation | ClassName>>(\n  ...args: T\n): string => {\n  const classes = [];\n  for (const arg of args) {\n    if (!arg) continue;\n    if (typeof arg === 'string') {\n      classes.push(arg);\n      continue;\n    }\n    if (typeof arg === 'object') {\n      for (const key in arg) {\n        if ((arg as AnyObject)[key]) classes.push(key);\n      }\n    }\n  }\n  return classes.join(' ');\n};\n\nexport const mergeStyles = (...args: (object | undefined)[]) => {\n  return args.reduce(\n    (acc, value) => ({\n      ...acc,\n      ...value,\n    }),\n    {}\n  );\n};\n\nexport const getInitialClass = (classes: string) => {\n  return classes.split(' ').at(0) || '';\n};\n","import { aspectRatioClasses } from './aspect.css';\nimport {\n  backgroundAndTextColorClasses,\n  backgroundsClasses,\n  textColorClasses,\n} from './colors.css';\nimport {\n  borderColorClasses,\n  borderRadiusClasses,\n  borderSizeClasses,\n} from './shape.css';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyObject = Record<any, any>;\n\nconst createProxy = <T extends AnyObject>(\n  object: T,\n  fallback: T[keyof T] | '' = ''\n) => {\n  return new Proxy(object, {\n    get: (target, key) => {\n      try {\n        if (!key) throw new Error('key is required');\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const final = (target as any)[key];\n        if (final) return final;\n        return fallback;\n      } catch (e) {\n        console.error(`Silencing error: ${e}`);\n        return fallback;\n      }\n    },\n  });\n};\n\nexport const aspectRatio = createProxy(aspectRatioClasses, '');\n\nexport const backgrounds = createProxy(backgroundsClasses, '');\n\nexport const textColor = createProxy(textColorClasses, '');\n\nexport const backgroundAndTextColor = createProxy(\n  backgroundAndTextColorClasses,\n  ''\n);\n\nexport const borderRadius = createProxy(borderRadiusClasses, '');\nexport const borderSize = createProxy(borderSizeClasses, '');\n\nexport const borderColor = createProxy(borderColorClasses, '');\n"],"names":[],"mappings":"AAsBa,KAAA,GAAO,IACf,IACQ,CACX,KAAM,GAAU,CAAA,EAChB,SAAW,KAAO,GAChB,GAAI,EAAC,EACD,IAAA,MAAO,IAAQ,SAAU,CAC3B,EAAQ,KAAK,CAAG,EAChB,QACF,CACI,GAAA,MAAO,IAAQ,SACjB,SAAW,KAAO,GAChB,AAAK,EAAkB,IAAM,EAAQ,KAAK,CAAG,EAI5C,MAAA,GAAQ,KAAK,GAAG,CACzB,EAEa,EAAc,IAAI,IACtB,EAAK,OACV,CAAC,EAAK,IAAW,EACf,GAAG,EACH,GAAG,CAAA,GAEL,CACF,CAAA,u4BCjCF,KAAM,GAAc,CAClB,EACA,EAA4B,KAErB,GAAI,OAAM,EAAQ,CACvB,IAAK,CAAC,EAAQ,IAAQ,CAChB,GAAA,CACF,GAAI,CAAC,EAAW,KAAA,IAAI,OAAM,iBAAiB,EAE3C,KAAM,GAAS,EAAe,GAC1B,MAAA,IACG,QACA,GACC,eAAA,MAAM,oBAAoB,GAAG,EAC9B,CACT,CACF,CAAA,CACD,EAGU,EAAc,EAAY,EAAoB,EAAE,EAEhD,EAAc,EAAY,EAAoB,EAAE,EAEhD,EAAY,EAAY,EAAkB,EAAE,EAE5C,EAAyB,EACpC,EACA,EACF,EAEa,EAAe,EAAY,EAAqB,EAAE,EAClD,EAAa,EAAY,EAAmB,EAAE,EAE9C,EAAc,EAAY,EAAoB,EAAE"}